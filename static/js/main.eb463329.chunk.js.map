{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","goods","setGoods","isVisibleToggle","setIsVisibleToggle","itemLength","setItemLength","showGoods","className","type","onClick","reverse","sort","a","b","localeCompare","length","value","onChange","event","target","map","good","Number","ReactDOM","render","document","getElementById"],"mappings":"iOAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA2HaC,EAxHO,WACpB,MAA0BC,mBAASF,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA8CF,oBAAS,GAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAAoCJ,mBAAS,KAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAEMC,EAAY,WAChBH,GAAoBD,IAoBtB,OACE,qBAAKK,UAAU,MAAf,SACGL,EAEG,qCACE,sBAAKK,UAAU,eAAf,UACE,wBACEC,KAAK,SACLC,QAASH,EACTC,UAAU,0BAHZ,kBAOA,wBACEC,KAAK,SACLC,QAhCE,WACdR,EAAS,YAAID,GAAOU,YAgCRH,UAAU,WAHZ,qBAOA,wBACEC,KAAK,SACLC,QAnCK,WACjBR,EAAS,YAAID,GAAOW,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,QAmCvCN,UAAU,WAHZ,iCAOA,wBACEC,KAAK,SACLC,QAtCO,WACnBR,EAAS,YAAID,GAAOW,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,YAsCpCR,UAAU,WAHZ,4BAOA,wBACEC,KAAK,SACLC,QAzCA,WACZR,EAAS,GAAD,OAAKJ,IACbQ,EAAc,MAwCFE,UAAU,0BAHZ,mBAOA,yBACES,MAAOZ,EACPa,SAAU,SAAAC,GACRb,EAAca,EAAMC,OAAOH,QAE7BT,UAAU,cALZ,UAOE,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,8CAGJ,oBAAIA,UAAU,YAAd,SACGP,EAAMoB,KAAI,SAAAC,GAGT,OAFkBA,EAAKN,QAAUO,OAAOlB,IAKpC,oBAEEG,UAAU,iBAFZ,SAIGc,GAHIA,WAYjB,qBAAKd,UAAU,uBAAf,SACE,wBACEC,KAAK,SACLC,QAASH,EACTC,UAAU,iBAHZ,wBCxHZgB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.eb463329.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [goods, setGoods] = useState(goodsFromServer);\n  const [isVisibleToggle, setIsVisibleToggle] = useState(false);\n  const [itemLength, setItemLength] = useState('1');\n\n  const showGoods = () => {\n    setIsVisibleToggle(!isVisibleToggle);\n  };\n\n  const reverse = () => {\n    setGoods([...goods].reverse());\n  };\n\n  const sortByAlph = () => {\n    setGoods([...goods].sort((a, b) => a.localeCompare(b)));\n  };\n\n  const sortByLength = () => {\n    setGoods([...goods].sort((a, b) => a.length - b.length));\n  };\n\n  const reset = () => {\n    setGoods([...goodsFromServer]);\n    setItemLength('1');\n  };\n\n  return (\n    <div className=\"App\">\n      {isVisibleToggle\n        ? (\n          <>\n            <div className=\"App__buttons\">\n              <button\n                type=\"button\"\n                onClick={showGoods}\n                className=\"App__btn App__btn--uniq\"\n              >\n                Hide\n              </button>\n              <button\n                type=\"button\"\n                onClick={reverse}\n                className=\"App__btn\"\n              >\n                Reverse\n              </button>\n              <button\n                type=\"button\"\n                onClick={sortByAlph}\n                className=\"App__btn\"\n              >\n                Sort alphabetically\n              </button>\n              <button\n                type=\"button\"\n                onClick={sortByLength}\n                className=\"App__btn\"\n              >\n                Sort by length\n              </button>\n              <button\n                type=\"button\"\n                onClick={reset}\n                className=\"App__btn App__btn--uniq\"\n              >\n                Reset\n              </button>\n              <select\n                value={itemLength}\n                onChange={event => {\n                  setItemLength(event.target.value);\n                }}\n                className=\"App__select\"\n              >\n                <option>1</option>\n                <option>2</option>\n                <option>3</option>\n                <option>4</option>\n                <option>5</option>\n                <option>6</option>\n                <option>7</option>\n                <option>8</option>\n                <option>9</option>\n                <option>10</option>\n              </select>\n            </div>\n            <ul className=\"App__list\">\n              {goods.map(good => {\n                const isVisible = good.length >= Number(itemLength);\n\n                return (\n                  isVisible\n                  && (\n                    <li\n                      key={good}\n                      className=\"App__list-item\"\n                    >\n                      {good}\n                    </li>\n                  )\n                );\n              })}\n            </ul>\n          </>\n        )\n        : (\n          <div className=\"App__start-container\">\n            <button\n              type=\"button\"\n              onClick={showGoods}\n              className=\"App__start-btn\"\n            >\n              Start\n            </button>\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}